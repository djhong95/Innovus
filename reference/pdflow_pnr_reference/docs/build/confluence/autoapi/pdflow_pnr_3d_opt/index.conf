<ac:structured-macro ac:name="note">
<ac:rich-text-body>
<p>This document is generated automatically. Do NOT change anythings in this page. All the changes will be ignored.</p>
</ac:rich-text-body>
</ac:structured-macro>
<h2>Table of Contents</h2>
<ul>
<li>
<p><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">id1</ac:parameter>
</ac:structured-macro>
<ac:link ac:anchor="ModuleContents">
<ac:link-body>Module Contents</ac:link-body>
</ac:link></p>
<ul>
<li>
<p><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">id2</ac:parameter>
</ac:structured-macro>
<ac:link ac:anchor="Functions">
<ac:link-body>Functions</ac:link-body>
</ac:link></p>
</li>
</ul>
</li>
</ul>
<h2><ac:link ac:anchor="id1">
<ac:link-body>Module Contents</ac:link-body>
</ac:link></h2>
<h3><ac:link ac:anchor="id2">
<ac:link-body>Functions</ac:link-body>
</ac:link></h3>
<table>
<tbody>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.main">
<ac:link-body><code>main</code></ac:link-body>
</ac:link>(main_tcl_files, log_tracer)</p>
</td>
<td><p>generate timing constraints (sdc) with parasitics from 3d_trial stage,</p>
</td>
</tr>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.write_compact2d_tcl">
<ac:link-body><code>write_compact2d_tcl</code></ac:link-body>
</ac:link>(filename, design_name)</p>
</td>
<td><p>we don&apos;t have to do anything for designs using compact2D flow as split designs are the final results themselves</p>
</td>
</tr>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.write_pt_load_design">
<ac:link-body><code>write_pt_load_design</code></ac:link-body>
</ac:link>(filename)</p>
</td>
<td><p>generate script for loading design</p>
</td>
</tr>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.write_pt_load_library">
<ac:link-body><code>write_pt_load_library</code></ac:link-body>
</ac:link>(filename)</p>
</td>
<td><p>generate script for loading library</p>
</td>
</tr>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.write_pt_tcl">
<ac:link-body><code>write_pt_tcl</code></ac:link-body>
</ac:link>(filename, load_library_file, load_design_file, tool_log_file)</p>
</td>
<td><p>generate tcl file for pt to generate sdc file for tier designs</p>
</td>
</tr>
<tr>
<td><p><ac:link ac:anchor="pdflow_pnr_3d_opt.write_shrunk2d_tcl">
<ac:link-body><code>write_shrunk2d_tcl</code></ac:link-body>
</ac:link>(filename, design_name, mmmc_file, cpf_file, upf_file, options_file)</p>
</td>
<td><p>generate main tcl file for shrunk2d designs</p>
</td>
</tr>
</tbody>
</table>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.main</ac:parameter>
</ac:structured-macro>
<strong><code>main</code></strong>(<em><em>main_tcl_files</em></em>, <em><em>log_tracer</em></em>)</dt>
<dd><p>generate timing constraints (sdc) with parasitics from 3d_trial stage, and perform detailed routing with the timing contraints</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><ul>
<li>
<p><strong>main_tcl_files</strong> (<em>flow_utils.List</em><em>[</em><em>str</em><em>]</em>) – the path to the tcl files for partitioned design</p>
</li>
<li>
<p><strong>log_tracer</strong> (<em>flow_log_utils.CustomStreamHandler</em>) – </p>
</li>
</ul>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.write_compact2d_tcl</ac:parameter>
</ac:structured-macro>
<strong><code>write_compact2d_tcl</code></strong>(<em><em>filename</em></em>, <em><em>design_name</em></em>)</dt>
<dd><p>we don’t have to do anything for designs using compact2D flow as split designs are the final results themselves</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>0 if script generation ended successfully. otherwise, 1</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><ul>
<li>
<p><strong>filename</strong> (<em>str</em>) – </p>
</li>
<li>
<p><strong>design_name</strong> (<em>str</em>) – </p>
</li>
</ul>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.write_pt_load_design</ac:parameter>
</ac:structured-macro>
<strong><code>write_pt_load_design</code></strong>(<em><em>filename</em></em>)</dt>
<dd><p>generate script for loading design</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>filename</strong> (<em>str</em>) – filename of the loading design script</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>0 if script generation ended successfully. otherwise, 1</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.write_pt_load_library</ac:parameter>
</ac:structured-macro>
<strong><code>write_pt_load_library</code></strong>(<em><em>filename</em></em>)</dt>
<dd><p>generate script for loading library</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><p><strong>filename</strong> (<em>str</em>) – filename of the loading library script</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>0 if script generation ended successfully. otherwise, 1</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.write_pt_tcl</ac:parameter>
</ac:structured-macro>
<strong><code>write_pt_tcl</code></strong>(<em><em>filename</em></em>, <em><em>load_library_file</em></em>, <em><em>load_design_file</em></em>, <em><em>tool_log_file</em></em>)</dt>
<dd><p>generate tcl file for pt to generate sdc file for tier designs</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><ul>
<li>
<p><strong>filename</strong> (<em>str</em>) – name of the main tcl file</p>
</li>
<li>
<p><strong>load_library_file</strong> (<em>str</em>) – filename of loading library file</p>
</li>
<li>
<p><strong>load_design_file</strong> (<em>str</em>) – filename of loading design file</p>
</li>
<li>
<p><strong>tool_log_file</strong> (<em>str</em>) – filename of the tool log file (we can set)</p>
</li>
</ul>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>0 if script generation ended successfully. otherwise, 1</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
<dl>
<dt><ac:structured-macro ac:name="anchor">
<ac:parameter ac:name="">pdflow_pnr_3d_opt.write_shrunk2d_tcl</ac:parameter>
</ac:structured-macro>
<strong><code>write_shrunk2d_tcl</code></strong>(<em><em>filename</em></em>, <em><em>design_name</em></em>, <em><em>mmmc_file</em></em>, <em><em>cpf_file</em></em>, <em><em>upf_file</em></em>, <em><em>options_file</em></em>)</dt>
<dd><p>generate main tcl file for shrunk2d designs</p>
<table>
<tbody>
<tr>
<td style="border: none"><strong>Parameters:</strong></td>
<td style="border: none"><ul>
<li>
<p><strong>filename</strong> (<em>str</em>) – name of the main tcl file</p>
</li>
<li>
<p><strong>design_name</strong> (<em>str</em>) – name of the tier design</p>
</li>
<li>
<p><strong>mmmc_file</strong> (<em>str</em>) – filename of mmmc file</p>
</li>
<li>
<p><strong>cpf_file</strong> (<em>flow_utils.Union</em><em>[</em><em>str</em><em>, </em><em>None</em><em>]</em>) – filename of cpf file</p>
</li>
<li>
<p><strong>upf_file</strong> (<em>flow_utils.Union</em><em>[</em><em>str</em><em>, </em><em>None</em><em>]</em>) – filename of upf file</p>
</li>
<li>
<p><strong>options_file</strong> (<em>str</em>) – filename of options file</p>
</li>
</ul>
</td>
</tr>
<tr>
<td style="border: none"><strong>Returns:</strong></td>
<td style="border: none"><p>0 if script generation ended successfully. otherwise, 1</p>
</td>
</tr>
<tr>
<td style="border: none"><strong>Return type:</strong></td>
<td style="border: none"><p>int</p>
</td>
</tr>
</tbody>
</table>
</dd>
</dl>
